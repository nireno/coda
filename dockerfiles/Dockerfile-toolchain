FROM ocaml/opam2:debian-9-ocaml-4.08

# if updated, also change in Dockerfile
ARG OCAML_VERSION=4.07.1

# location of repo used for pins and external package commits
ARG CODA_DIR=/coda

# location of external packages
ARG EXTERNAL_PKG_DIR=$CODA_DIR/src/external

# don't keep sources, to force reinstall of pinned packages from Coda sources
# and to keep Docker image reasonable size
ARG OPAMKEEPBUILDDIR=false
ARG OPAMREUSEBUILDDIR=false

# OS package dependencies
RUN sudo apt-get update && sudo apt-get install --yes \
    cmake \
    jq \
    libboost-dev \
    libboost-program-options-dev \
    libffi-dev \
    libgmp-dev \
    libgmp3-dev \
    libjemalloc-dev \
    libprocps-dev \
    libsodium-dev \
    libssl-dev \
    lsb \
    m4 \
    pandoc \
    patchelf \
    python \
    perl \
    pkg-config \
    python-jinja2 \
    python-pip \
    rubygems \
    zlib1g-dev \
    libbz2-dev

RUN sudo pip install sexpdata awscli

RUN sudo gem install deb-s3

RUN VER="19.03.4" && \
    curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz && \
    tar -xz -C /tmp -f /tmp/docker-$VER.tgz && \
    sudo mv /tmp/docker/* /usr/bin

# Google Cloud tools
RUN export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" && \
    echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && \
    sudo apt-get update -y && sudo apt-get install google-cloud-sdk -y

# Source copy of rocksdb
RUN sudo git clone https://github.com/facebook/rocksdb -b v5.17.2 /rocksdb
# This builds and installs just the static lib for us
RUN cd /rocksdb && sudo make static_lib PORTABLE=1 -j$(nproc) && sudo cp librocksdb.a /usr/local/lib/librocksdb_coda.a && sudo rm -rf /rocksdb && sudo strip -S /usr/local/lib/librocksdb_coda.a

# clone Coda repo to pin external package and save their commits
RUN sudo git clone https://github.com/CodaProtocol/coda $CODA_DIR

# use HTTPS git clone for submodules
RUN cd $CODA_DIR && sudo sed --in-place s+git@github.com:+https://github.com/+g .gitmodules

# init submodules for pinning
RUN cd $CODA_DIR && sudo git submodule update --init --recursive

# save submodule commits
RUN for pkg in async_kernel digestif graphql_ppx ocaml-extlib rpc_parallel ; do \
      # remove leading "-" indicating uninitialized
      cd $CODA_DIR && sudo bash -c "git submodule status src/external/$pkg | awk '{print \$1}' | sed s/-// > ~opam/opam-repository/$pkg.commit" ; \
    done

# save log commits for ocaml-sodium, coda_base58, which are not submodules
RUN for pkg in ocaml-sodium coda_base58 ; do \
      cd $CODA_DIR && sudo bash -c "git log --format=oneline -n 1 src/external/$pkg | awk '{print \$1}' > ~opam/opam-repository/$pkg.commit" ; \
    done

# OPAM dependencies
RUN git -C /home/opam/opam-repository pull
RUN opam update -y && opam upgrade -y

# install vanilla OCaml compiler
RUN opam switch create $OCAML_VERSION

# install, use spacetime OCaml compiler
RUN opam switch create $OCAML_VERSION+spacetime
RUN eval $(opam env)

# Install OPAM packages for spacetime compiler; use ulimited stack for camlp4 build
ADD /src/opam.export .
RUN ulimit -s unlimited && opam switch import opam.export

# Remove .git files for submodules
RUN for pkg in async_kernel digestif graphql_ppx ocaml-extlib rpc_parallel ; do \
      sudo rm -f $EXTERNAL_PKG_DIR/$pkg/.git ; \
    done

# Pin packages for spacetime compiler
RUN for pkg in ocaml-sodium rpc_parallel ocaml-extlib digestif async_kernel coda_base58 graphql_ppx ; do \
      cd $EXTERNAL_PKG_DIR/$pkg && opam pin -y add . ; \
    done

# use vanilla OCaml compiler
RUN opam switch $OCAML_VERSION
RUN eval $(opam env)

# Install OPAM packages for vanilla compiler
RUN opam switch import opam.export ; rm opam.export

# Pin packages for vanilla compiler
RUN for pkg in ocaml-sodium rpc_parallel ocaml-extlib digestif async_kernel coda_base58 graphql_ppx ; do \
      cd $EXTERNAL_PKG_DIR/$pkg && opam pin -y add . ; \
    done

# repo no longer needed
RUN sudo rm -rf /coda

# Get coda-kademlia from packages repo
RUN sudo apt-get install --yes apt-transport-https ca-certificates && \
      echo "deb [trusted=yes] https://packages.o1test.net unstable main" | sudo tee -a /etc/apt/sources.list.d/coda.list && \
      sudo apt-get update && \
      sudo apt-get install --yes coda-discovery

# The Ocaml images are set to London time for reason. UTC makes reading the logs
# easier.
RUN sudo ln -sf /usr/share/zoneinfo/UTC /etc/localtime

# Unlimit stack for future shells that might use spacetime
RUN echo ulimit -s unlimited >> ~/.bashrc
